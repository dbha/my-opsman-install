product-name: pivotal-container-service
product-properties:
  .pivotal-container-service.pks_tls:
    value:
      cert_pem: ((pivotal_container_service_pks_tls.certificate))
      private_key_pem: ((pivotal_container_service_pks_tls.private_key))
  .properties.cloud_provider:
    selected_option: ((properties_cloud_provider_selected_option))
    value: ((properties_cloud_provider_selected_option_value))
  .properties.cloud_provider.vsphere.vcenter_dc:
    value: ((cloud_provider_vsphere_vcenter_dc))
  .properties.cloud_provider.vsphere.vcenter_ds:
    value: ((cloud_provider_vsphere_vcenter_ds))
  .properties.cloud_provider.vsphere.vcenter_ip:
    value: ((cloud_provider_vsphere_vcenter_ip))
  .properties.cloud_provider.vsphere.vcenter_master_creds:
    value:
      identity: ((iaas_configurations_0_vcenter_username))
      password: ((iaas_configurations_0_vcenter_password))

  .properties.cloud_provider.vsphere.vcenter_vms:
    value: ((cloud_provider_vsphere_vcenter_vms))
  .properties.log_sink_resources_deploy:
    value: ((log_sink_resources_deploy))
  .properties.metric_sink_resources_deploy:
    value: ((metric_sink_resources_deploy))
  .properties.network_selector:
    selected_option: ((network_selector_selected_option))
    value: ((network_selector_selected_option))
  .properties.network_selector.nsx.cloud-config-dns:
    value: ((network_selector_nsx_cloud_config_dns))
  .properties.network_selector.nsx.floating-ip-pool-ids:
    value: ((network_selector_nsx_floating_ip_pool_ids))
  .properties.network_selector.nsx.ip-block-id:
    value: ((network_selector_nsx_ip_block_id))
  .properties.network_selector.nsx.lb_size_large_supported:
    value: true
  .properties.network_selector.nsx.lb_size_medium_supported:
    value: true
  .properties.network_selector.nsx.nat_mode:
    value: true
  .properties.network_selector.nsx.ncp-ha-heartbeat-period:
    value: 6
  .properties.network_selector.nsx.ncp-ha-master-timeout:
    value: 18
  .properties.network_selector.nsx.ncp-ha-update-timeout:
    value: 12
  .properties.network_selector.nsx.network_automation:
    value: true
  .properties.network_selector.nsx.nodes-ip-block-id:
    value: ((network_selector_nsx_nodes_ip_block_id))
  .properties.network_selector.nsx.nsx-t-ca-cert:
    value: ((nsx_api_ca_cert.certificate))
  .properties.network_selector.nsx.nsx-t-host:
    value: nsxmgr-01.haas-205.pez.pivotal.io
  .properties.network_selector.nsx.nsx-t-insecure:
    value: false
  .properties.network_selector.nsx.nsx-t-superuser-certificate:
    value:
      cert_pem: ((nsx_api_ca_cert.certificate))
      private_key_pem: ((nsx_api_ca_cert.private_key))
  .properties.network_selector.nsx.service_cluster_cidr:
    value: 10.100.200.0/24
  .properties.network_selector.nsx.t0-router-id:
    value: ((network_selector_nsx_t0_router_id))
  .properties.network_selector.nsx.vcenter_cluster:
    value: ((network_selector_nsx_vcenter_cluster))
  .properties.node_exporter_deploy:
    value: true
  .properties.oidc_selector:
    selected_option: disabled
    value: disabled
  .properties.pks-vrli:
    selected_option: disabled
    value: disabled
  .properties.pks-vrops:
    selected_option: disabled
    value: disabled
  .properties.pks_api_hostname:
    value: ((pks_api_hostname))
  .properties.plan1_selector:
    selected_option: active
    value: Plan Active
#  .properties.plan1_selector.active.addons_spec:
#    value: ((plan1_selector_active_addons_spec))
  .properties.plan1_selector.active.admission_plugins:
    value: []
  .properties.plan1_selector.active.allow_privileged_containers:
    value: true
  .properties.plan1_selector.active.description:
    value: 'Example: This plan will configure a lightweight kubernetes cluster. Not recommended for production workloads.'
  .properties.plan1_selector.active.kubelet_drain_delete_local_data:
    value: true
  .properties.plan1_selector.active.kubelet_drain_force:
    value: true
  .properties.plan1_selector.active.kubelet_drain_force_node:
    value: false
  .properties.plan1_selector.active.kubelet_drain_grace_period:
    value: 10
  .properties.plan1_selector.active.kubelet_drain_ignore_daemonsets:
    value: true
  .properties.plan1_selector.active.kubelet_drain_timeout:
    value: 0
  .properties.plan1_selector.active.master_az_placement:
    value:
    - ((plan1_selector_active_az_placement_az1))
    - ((plan1_selector_active_az_placement_az2))
    - ((plan1_selector_active_az_placement_az3))
  .properties.plan1_selector.active.master_instances:
    value: 1
  .properties.plan1_selector.active.max_worker_instances:
    value: 50
  .properties.plan1_selector.active.name:
    value: small
  .properties.plan1_selector.active.worker_az_placement:
    value:
    - ((plan1_selector_active_az_placement_az1))
    - ((plan1_selector_active_az_placement_az2))
    - ((plan1_selector_active_az_placement_az3))
  .properties.plan1_selector.active.worker_instances:
    value: 3
  .properties.plan2_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan3_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan4_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan5_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan6_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan7_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan8_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan9_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan10_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan11_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan12_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan13_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.proxy_selector:
    selected_option: disabled
    value: Disabled
  .properties.syslog_selector:
    selected_option: disabled
    value: disabled
  .properties.telegraf_selector:
    selected_option: enabled
    value: enabled
  .properties.telegraf_selector.enabled.bosh-metric-sink-etcd:
    value: true
  .properties.telegraf_selector.enabled.bosh-metric-sink-kube-apiserver:
    value: false
  .properties.telegraf_selector.enabled.bosh-metric-sink-kube-controller-manager:
    value: false
  .properties.telegraf_selector.enabled.bosh-metric-sink-kubelet:
    value: true
  .properties.telegraf_selector.enabled.bosh-metric-sink-node-exporter-master:
    value: false
  .properties.telegraf_selector.enabled.bosh-metric-sink-node-exporter-pks-api:
    value: false
  .properties.telegraf_selector.enabled.bosh-metric-sink-node-exporter-worker:
    value: false
  .properties.telegraf_selector.enabled.bosh-metric-sink-outputs:
    selected_option: disabled
    value: disabled
  .properties.telemetry_installation_purpose_selector:
    selected_option: not_provided
    value: not_provided
  .properties.telemetry_selector:
    selected_option: disabled
    value: disabled
  .properties.tmc:
    selected_option: disabled
    value: disabled
  .properties.uaa:
    selected_option: internal
    value: internal
  .properties.uaa_pks_cli_access_token_lifetime:
    value: 600
  .properties.uaa_pks_cli_refresh_token_lifetime:
    value: 21600
  .properties.uaa_pks_cluster_client_access_token_lifetime:
    value: 600
  .properties.uaa_pks_cluster_client_refresh_token_lifetime:
    value: 21600
  .properties.wavefront:
    selected_option: disabled
    value: disabled
  .properties.worker_max_in_flight:
    value: 6
network-properties:
  network:
    name: PKS-Services
  other_availability_zones:
  - name: ((plan1_selector_active_az_placement_az1))
  - name: ((plan1_selector_active_az_placement_az2))
  - name: ((plan1_selector_active_az_placement_az3))

  service_network:
    name: PKS-Services
  singleton_availability_zone:
    name: ((plan1_selector_active_az_placement_az1))

resource-config:
  pivotal-container-service:
    instance_type:
      id: ((pivotal_container_service_instance_type))
    max_in_flight: ((pivotal_container_service_max_in_flight))
    instances: ((pivotal_container_service_instance))
    persistent_disk:
      size_mb: ((pivotal_container_service_persistent_disk_size))
    swap_as_percent_of_memory_size:
  pks-db:
    instance_type:
      id: ((pks_db_instance_type))
    max_in_flight: ((pks_db_max_in_flight))
    instances: instances
    persistent_disk:
      size_mb: ((pks_db_persistent_disk_size))
    swap_as_percent_of_memory_size: ((pks_db_swap_as_percent_of_memory_size)

errand-config:
  clone-db:
    post-deploy-state: ((clone_db_post_deploy_state))
  delete-all-clusters:
    pre-delete-state: ((delete_all_clusters_pre_delete_state))
  pks-nsx-t-precheck:
    post-deploy-state: ((pks_nsx_t_precheck_post_deploy_state))
  smoke-tests:
    post-deploy-state: ((smoke_tests_post_deploy_state))
  upgrade-all-service-instances:
    post-deploy-state: ((upgrade_all_service_instances_post_deploy_state))
  wavefront-alert-creation:
    post-deploy-state: ((wavefront_alert_creation_post_deploy_state))
  wavefront-alert-deletion:
    pre-delete-state: ((wavefront_alert_deletion_pre_delete_state))

