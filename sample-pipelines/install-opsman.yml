resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: semver-config
  type: docker-image
  source:
    repository: itstarting/semver-config-concourse-resource

resources:
#- name: platform-automation
#  type: pivnet
#  source:
#    product_slug: platform-automation
#    api_token: ((pivnet-refresh-token))

- name: platform-automation-tasks
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.platform_automation))
    regexp: platform-automation-tasks-(.*).zip
    skip_ssl_verification: true

- name: platform-automation-image
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.platform_automation))
    regexp: platform-automation-image-(.*).tgz
    skip_ssl_verification: true


# configurations
- name: configuration
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.platform_automation_pipelines.uri))
    branch: master

- name: variable
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.platform_automation_pipelines.uri))
    branch: master

  ## semver-config will emit semver-config.yml to be use as a input of download-product.yml
- name: product-version-git-opsman
  type: semver-config
  source:
    driver: git
    uri: ((git.platform_automation_pipelines.uri))
    branch: master
    private_key: ((git.private_key))
    config_file: foundations/((foundation))/products/version.yml
    ## key to identify product section in 'version.yml'
    config_path: products.opsman
    ## to track version by semver-config
    version_path: products.opsman.product-version
    ## care only patch version chage.
    version_pattern: "m.n.p"



#credhub_interpolate: &credhub_interpolate
#  image: platform-automation-image
#  file: platform-automation-tasks/tasks/credhub_interpolate.yml
#  input_mapping:
#    files: configuration
#  params:
#    CREDHUB_SERVER: ((credhub.server))
#    CREDHUB_CA_CERT: ((credhub.ca_cert))
#    CREDHUB_CLIENT: ((credhub.client))
#    CREDHUB_SECRET: ((credhub.secret))
#    PREFIX: /concourse/((foundation))
#    INTERPOLATION_PATHS: ((foundation))/opsman ((foundation))/vars
#    SKIP_MISSING: false

#- name: config
#  type: git
#  source:
#    uri: ((pipeline-repo))
#    private_key: ((plat-auto-pipes-deploy-key.private_key))
#    branch: master

prepare_tasks_with_secrets: &prepare_tasks_with_secrets
  image: platform-automation-image
  file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
  input_mapping:
    tasks: platform-automation-tasks
    config: configuration
    vars: configuration
  params:
    CONFIG_PATHS: config/foundations/((foundation))/download-products
    VARS_PATHS: vars/foundations/((foundation))/vars
  output_mapping:
    tasks: platform-automation-tasks

jobs:
  - name: upload-and-stage-product
    serial: true
    plan:
      - in_parallel:
          - get: product-version-git
            trigger: false
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
          - get: variable

      - task: prepare_tasks_with_secrets
        <<: *prepare_tasks_with_secrets

      ## ova file.
      - task: download-product-from-s3
        image: platform-automation-image
        file: pipelines/tasks/download-product-s3.yml
        input_mapping:
          ## semver-config output semver-config.yml to be use as a input of download-product.yml
          ## semver-config.yaml is output of 'product-version-git-opsnam' task.
          ## will find a folder name of '[pivnet-product-slug, product-version]' in s3 bucket.
          ## will find a file name 'pivnet-product-slug, product-version, pivnet-file-glob' under the folder.
          ## stemcell slug will come from meta in product file.
          ## ex) https://s3/pivnet-products/[opsmanager,2.6.3]/ops-manager-vsphere-2.6.3-build.163.ova
          config: product-version-git-opsman  ## will provide additional params for semver-config.yaml
          vars: interpolated-files
        params:
          CONFIG_FILE: semver-config.yaml
          # VARS_FILES: vars/((foundation))/vars/global.yml
